
$pallets: (
  'dark': (
    'text': (
      rgb(79, 125, 146), // main
      rgb(3, 154, 255), // highlighted
      rgb(255,255,255), // button
      rgba(128, 128, 128, 0.7) // additional info
    ),
    'background': (
      black, // body
      rgba(0, 0, 0, 0.7), // opacity
      rgba(0, 0, 0, 0.7) // window opacity
    ),
    'border': (
      rgb(3, 154, 255), // highlighted
      rgba(3, 154, 255, 0.38), // dim
      rgb(40, 190, 115), // active
      rgba(128, 128, 128, 0.7) // disabled
    ),
    'gradients': (
      (rgba(19, 105, 211, 0.79), rgba(18, 38, 63, 1.0)), // loop
      (rgba(18, 38, 63, 0.79), rgba(18, 38, 63, 1.0)), // main
      (rgba(23, 95, 184, 0.8), rgba(28, 89, 165, 1.0)), // active
      (rgb(3, 154, 255), rgba(0, 0, 0, 0.7), rgb(3, 154, 255)) // header
    )
  ),
  'light': (
    'text': (
      rgb(9, 15, 66), // main
      rgb(0, 85, 141), // header
      rgb(255,255,255), // button
      rgba(43, 60, 187, 0.603) // additional info
    ),
    'background': (
      white, // body
      rgba(0, 0, 0, 0.7), // loader opacity
      rgba(255, 255, 255, 0.7) // window opacity
    ),
    'border': (
      rgb(3, 154, 255), // highlighted
      rgb(74, 77, 110), // dim
      rgb(40, 190, 115), // active
      rgba(43, 60, 187, 0.603) // disabled
    ),
    'gradients': (
      (rgb(255, 255, 255), rgb(119, 180, 255)), // loop
      (rgb(54, 129, 221), rgb(88, 163, 255)), // main
      (rgba(23, 95, 184, 0.8), rgba(28, 89, 165, 1.0)), // active
      (rgba(3, 154, 255, 0.7), rgba(119, 180, 255, 0.5)) // header
    )
  ),
);

/* ================ Do not edit directly ================ */

$themes: map-keys($pallets);

@function color($type, $index) {
  $res: ();
  @each $theme, $types in $pallets {
    $res: map_merge($res, (
      $theme: nth(map_get($types, $type), $index)
    ))
  }
  @return $res;
}

@function gen-gradient($colors) {
  $res: ();
  @each $theme, $color in $colors {
    $res: map_merge($res, (
      $theme: linear-gradient(70deg,
        nth($color, 1) 40%,
        nth($color, 2) 41%,
        nth($color, 1) 100%),
    ))
  }
  @return $res;
}

/* ================ TEXT SYNONYMS ================ */

$colorButtonText: color("text", 3);
$colorText: color("text", 1);
$colorHrefText: color("text", 2);
$colorTextTableHeader: color("text", 2);
$colorTextWindowHeader: color("text", 2);
$colorHighlighted: color("text", 2);
$colorToastText: color("text", 2);
$colorAdditionalText: color("text", 4);


/* ================ BORDERS ================ */

$colorBorderLight: color("border", 1);
$colorBorder: color("border", 2);
$colorBorderActive: color("border", 3);
$colorBorderDisabled: color("border", 4);

$background: color("background", 1);
$colorDark: color("background", 2);
$loadingBackground: color("background", 2);
$windowBackground: color("background", 3);

/* ================ GRADIENTS ================ */

$gradientColorsLoop: color("gradients", 1);
$gradient: gen-gradient(color("gradients", 2));
$gradientActive: gen-gradient(color("gradients", 3));
$gradientHeaderLoop: gen-gradient(color("gradients", 4));
